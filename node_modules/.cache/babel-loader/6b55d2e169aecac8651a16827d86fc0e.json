{"ast":null,"code":"import _classCallCheck from \"/home/scrubboi/Documents/Research/plant-env-monitor/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/scrubboi/Documents/Research/plant-env-monitor/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/scrubboi/Documents/Research/plant-env-monitor/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/scrubboi/Documents/Research/plant-env-monitor/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/scrubboi/Documents/Research/plant-env-monitor/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/scrubboi/Documents/Research/plant-env-monitor/src/components/environment.component.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport axios from 'axios';\nimport '../../node_modules/react-vis/dist/style.css';\nimport { XYPlot, VerticalBarSeries, MarkSeries, LineSeries, VerticalGridLines, HorizontalGridLines, YAxis, XAxis } from 'react-vis';\nvar Server = \"http://192.168.1.165:1337/\";\n\nvar EnvData =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EnvData, _Component);\n\n  function EnvData(props) {\n    var _this;\n\n    _classCallCheck(this, EnvData);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EnvData).call(this, props));\n    _this.state = {\n      envis: []\n    };\n    return _this;\n  }\n\n  _createClass(EnvData, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var serverLocation = Server + 'envi/';\n      axios.get(serverLocation).then(function (res) {\n        _this2.setState({\n          envis: res.data\n        });\n      }).catch(function (error) {\n        console.log(error);\n      }); // console.log({this.state.envis})\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // const data= [\n      //   {x: Date.parse('2019-4-21T18:29:35'), y: 75},\n      //   {x: new Date('2019-4-21T19:29:35'), y: 60},\n      //   {x: new Date('2019-4-21T21:29:35'), y: 80},\n      //   {x: new Date('2019-4-21T22:29:35'), y: 50}\n      // ]\n      var data = this.state.envis.map(function (envi) {\n        var xTime = Date.parse(envi.time);\n        console.log(xTime);\n        return {\n          x: Date.parse(envi.time),\n          y: envi.temperature\n        };\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(XYPlot, {\n        height: 200,\n        width: 200,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(VerticalBarSeries, {\n        data: data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      })), React.createElement(XYPlot, {\n        height: 200,\n        width: 200,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(LineSeries, {\n        data: data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      })), React.createElement(XYPlot, {\n        height: 200,\n        width: 200,\n        xDomain: [9, 0],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(MarkSeries, {\n        data: data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return EnvData;\n}(Component);\n\nexport { EnvData as default };","map":{"version":3,"sources":["/home/scrubboi/Documents/Research/plant-env-monitor/src/components/environment.component.js"],"names":["React","Component","BrowserRouter","Router","Route","Link","axios","XYPlot","VerticalBarSeries","MarkSeries","LineSeries","VerticalGridLines","HorizontalGridLines","YAxis","XAxis","Server","EnvData","props","state","envis","serverLocation","get","then","res","setState","data","catch","error","console","log","map","envi","xTime","Date","parse","time","x","y","temperature"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,IAAzC,QAAqD,kBAArD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,OAAO,6CAAP;AACA,SAAQC,MAAR,EACQC,iBADR,EAEQC,UAFR,EAGQC,UAHR,EAIQC,iBAJR,EAKQC,mBALR,EAMQC,KANR,EAOQC,KAPR,QAQa,WARb;AAWA,IAAMC,MAAM,GAAG,4BAAf;;IAEqBC,O;;;;;AACnB,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,iFAAMA,KAAN;AACE,UAAKC,KAAL,GAAa;AAACC,MAAAA,KAAK,EAAE;AAAR,KAAb;AAFe;AAGlB;;;;wCAEmB;AAAA;;AAClB,UAAIC,cAAc,GAAGL,MAAM,GAAG,OAA9B;AACAT,MAAAA,KAAK,CAACe,GAAN,CAAUD,cAAV,EACKE,IADL,CACU,UAAAC,GAAG,EAAI;AACb,QAAA,MAAI,CAACC,QAAL,CAAc;AAAEL,UAAAA,KAAK,EAAEI,GAAG,CAACE;AAAb,SAAd;AACD,OAHH,EAIGC,KAJH,CAIS,UAAUC,KAAV,EAAgB;AACrBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,OANH,EAFkB,CAQb;AACN;;;6BAEU;AACP;AACA;AACA;AACA;AACA;AACA;AAEE,UAAMF,IAAI,GAAG,KAAKP,KAAL,CAAWC,KAAX,CAAiBW,GAAjB,CAAqB,UAACC,IAAD,EAAS;AACzC,YAAIC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWH,IAAI,CAACI,IAAhB,CAAZ;AACAP,QAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACA,eAAO;AAACI,UAAAA,CAAC,EAAEH,IAAI,CAACC,KAAL,CAAWH,IAAI,CAACI,IAAhB,CAAJ;AAA2BE,UAAAA,CAAC,EAAEN,IAAI,CAACO;AAAnC,SAAP;AACD,OAJY,CAAb;AAMA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,MAAD;AAAQ,QAAA,MAAM,EAAE,GAAhB;AAAqB,QAAA,KAAK,EAAE,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,iBAAD;AAAmB,QAAA,IAAI,EAAEb,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADA,EAIA,oBAAC,MAAD;AAAQ,QAAA,MAAM,EAAE,GAAhB;AAAqB,QAAA,KAAK,EAAE,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAY,QAAA,IAAI,EAAEA,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAJA,EAOA,oBAAC,MAAD;AAAQ,QAAA,MAAM,EAAE,GAAhB;AAAqB,QAAA,KAAK,EAAE,GAA5B;AAAiC,QAAA,OAAO,EAAE,CAAC,CAAD,EAAI,CAAJ,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAY,QAAA,IAAI,EAAEA,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAPA,CADJ;AAcH;;;;EA7CgCxB,S;;SAAhBe,O","sourcesContent":["import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport axios from 'axios';\n\n\nimport '../../node_modules/react-vis/dist/style.css';\nimport {XYPlot,\n        VerticalBarSeries,\n        MarkSeries,\n        LineSeries,\n        VerticalGridLines,\n        HorizontalGridLines,\n        YAxis,\n        XAxis\n      } from 'react-vis';\n\n\nconst Server = \"http://192.168.1.165:1337/\";\n\nexport default class EnvData extends Component {\n  constructor(props) {\n    super(props);\n      this.state = {envis: []};\n  }\n\n  componentDidMount() {\n    var serverLocation = Server + 'envi/';\n    axios.get(serverLocation)\n        .then(res => {\n        this.setState({ envis: res.data });\n      })\n      .catch(function (error){\n        console.log(error);\n      });// console.log({this.state.envis})\n  }\n\n    render() {\n      // const data= [\n      //   {x: Date.parse('2019-4-21T18:29:35'), y: 75},\n      //   {x: new Date('2019-4-21T19:29:35'), y: 60},\n      //   {x: new Date('2019-4-21T21:29:35'), y: 80},\n      //   {x: new Date('2019-4-21T22:29:35'), y: 50}\n      // ]\n\n        const data = this.state.envis.map((envi)=> {\n          var xTime = Date.parse(envi.time);\n          console.log(xTime);\n          return {x: Date.parse(envi.time), y: envi.temperature}\n        });\n\n        return (\n            <div>\n            <XYPlot height={200} width={200}>\n              <VerticalBarSeries data={data} />\n            </XYPlot>\n            <XYPlot height={200} width={200}>\n              <LineSeries data={data} />\n            </XYPlot>\n            <XYPlot height={200} width={200} xDomain={[9, 0]}>\n              <MarkSeries data={data} />\n            </XYPlot>\n\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}