{"ast":null,"code":"import _classCallCheck from \"/home/scrubboi/Documents/Research/plant-env-monitor/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/scrubboi/Documents/Research/plant-env-monitor/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/scrubboi/Documents/Research/plant-env-monitor/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/scrubboi/Documents/Research/plant-env-monitor/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/scrubboi/Documents/Research/plant-env-monitor/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/scrubboi/Documents/Research/plant-env-monitor/src/components/environment.component.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport '../../node_modules/react-vis/dist/style.css';\nimport { XYPlot, VerticalBarSeries, HeatmapSeries, MarkSeries, LineSeries, VerticalGridLines, HorizontalGridLines, YAxis, XAxis } from 'react-vis';\nvar Server = \"http://192.168.1.165:1337/\";\n\nvar EnvData =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EnvData, _Component);\n\n  function EnvData(props) {\n    var _this;\n\n    _classCallCheck(this, EnvData);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EnvData).call(this, props));\n    _this.state = {\n      envis: []\n    };\n    return _this;\n  }\n\n  _createClass(EnvData, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var serverLocation = Server + 'envi/';\n      axios.get(serverLocation).then(function (res) {\n        _this2.setState({\n          envis: res.data\n        });\n      }).catch(function (error) {\n        console.log(error);\n      }); // console.log({this.state.envis})\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var data = this.state.envis.map(function (envi) {\n        var xTime = Date.parse(envi.time); // console.log(xTime);\n\n        return {\n          x: Date.parse(envi.time),\n          y: envi.temperature\n        };\n      });\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(XYPlot, {\n        width: 600,\n        height: 300,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(XAxis, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(YAxis, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(HeatmapSeries, {\n        data: data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      })), React.createElement(XYPlot, {\n        height: 200,\n        width: 600,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"  \", React.createElement(XAxis, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), React.createElement(YAxis, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(LineSeries, {\n        data: data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return EnvData;\n}(Component);\n\nexport { EnvData as default };","map":{"version":3,"sources":["/home/scrubboi/Documents/Research/plant-env-monitor/src/components/environment.component.js"],"names":["React","Component","axios","XYPlot","VerticalBarSeries","HeatmapSeries","MarkSeries","LineSeries","VerticalGridLines","HorizontalGridLines","YAxis","XAxis","Server","EnvData","props","state","envis","serverLocation","get","then","res","setState","data","catch","error","console","log","map","envi","xTime","Date","parse","time","x","y","temperature"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,OAAO,6CAAP;AACA,SAAQC,MAAR,EACQC,iBADR,EAEQC,aAFR,EAGQC,UAHR,EAIQC,UAJR,EAKQC,iBALR,EAMQC,mBANR,EAOQC,KAPR,EAQQC,KARR,QASa,WATb;AAYA,IAAMC,MAAM,GAAG,4BAAf;;IAEqBC,O;;;;;AACnB,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,iFAAMA,KAAN;AACE,UAAKC,KAAL,GAAa;AAACC,MAAAA,KAAK,EAAE;AAAR,KAAb;AAFe;AAGlB;;;;wCAEmB;AAAA;;AAClB,UAAIC,cAAc,GAAGL,MAAM,GAAG,OAA9B;AACAV,MAAAA,KAAK,CAACgB,GAAN,CAAUD,cAAV,EACKE,IADL,CACU,UAAAC,GAAG,EAAI;AACb,QAAA,MAAI,CAACC,QAAL,CAAc;AAAEL,UAAAA,KAAK,EAAEI,GAAG,CAACE;AAAb,SAAd;AACD,OAHH,EAIGC,KAJH,CAIS,UAAUC,KAAV,EAAgB;AACrBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,OANH,EAFkB,CAQb;AACN;;;6BAEU;AAEL,UAAMF,IAAI,GAAG,KAAKP,KAAL,CAAWC,KAAX,CAAiBW,GAAjB,CAAqB,UAACC,IAAD,EAAS;AACzC,YAAIC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWH,IAAI,CAACI,IAAhB,CAAZ,CADyC,CAEzC;;AACA,eAAO;AAACC,UAAAA,CAAC,EAAEH,IAAI,CAACC,KAAL,CAAWH,IAAI,CAACI,IAAhB,CAAJ;AAA2BE,UAAAA,CAAC,EAAEN,IAAI,CAACO;AAAnC,SAAP;AACD,OAJY,CAAb;AAMA,aACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,MAAD;AACV,QAAA,KAAK,EAAE,GADG;AAEV,QAAA,MAAM,EAAE,GAFE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGV,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHU,EAIV,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJU,EAKV,oBAAC,aAAD;AACE,QAAA,IAAI,EAAEb,IADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALU,CADA,EAUA,oBAAC,MAAD;AAAQ,QAAA,MAAM,EAAE,GAAhB;AAAqB,QAAA,KAAK,EAAE,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAoC,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAApC,EACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,UAAD;AAAY,QAAA,IAAI,EAAEA,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAVA,CADJ;AAmBH;;;;EA5CgCrB,S;;SAAhBY,O","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\n\nimport '../../node_modules/react-vis/dist/style.css';\nimport {XYPlot,\n        VerticalBarSeries,\n        HeatmapSeries,\n        MarkSeries,\n        LineSeries,\n        VerticalGridLines,\n        HorizontalGridLines,\n        YAxis,\n        XAxis\n      } from 'react-vis';\n\n\nconst Server = \"http://192.168.1.165:1337/\";\n\nexport default class EnvData extends Component {\n  constructor(props) {\n    super(props);\n      this.state = {envis: []};\n  }\n\n  componentDidMount() {\n    var serverLocation = Server + 'envi/';\n    axios.get(serverLocation)\n        .then(res => {\n        this.setState({ envis: res.data });\n      })\n      .catch(function (error){\n        console.log(error);\n      });// console.log({this.state.envis})\n  }\n\n    render() {\n\n        const data = this.state.envis.map((envi)=> {\n          var xTime = Date.parse(envi.time);\n          // console.log(xTime);\n          return {x: Date.parse(envi.time), y: envi.temperature}\n        });\n\n        return (\n            <div className=\"container\">\n            <XYPlot\n  width={600}\n  height={300}>\n  <XAxis />\n  <YAxis />\n  <HeatmapSeries\n    data={data}/>\n</XYPlot>\n\n            <XYPlot height={200} width={600} >  <XAxis />\n              <YAxis />\n              <LineSeries data={data} />\n            </XYPlot>\n\n\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}